image: php:8.1-cli

stages:
  - setup
  - test
  - deploy_dev
  - deploy

cache:
  paths:
    - vendor/
    - node_modules/

setup:
  stage: setup
  script:
    - apt-get update -yqq
    - apt-get install git unzip libpq-dev postgresql-client -yqq
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --prefer-dist --no-ansi --no-interaction --no-scripts
    - docker-php-ext-install pdo pdo_pgsql
    # install node and npm
    - apt-get install -y nodejs npm
    - npm install -g npm@latest
    - export PATH=$PATH:$(npm bin -g)
    - npm install
    - npm run build

test:
  stage: test
  script:
    - php bin/phpunit

deploy_dev:
  stage: deploy_dev
  script:
    - apt-get update -yqq
    - apt-get update && apt-get install -y nodejs
    - apt-get update && apt-get install -y npm
    - npm install -g npm@latest
    - export PATH=$PATH:$(npm bin -g)
    - apt-get install -yqq openssh-client
    - apt-get update && apt-get install -y libssl-dev
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p $SSH_PORT -H $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST pwd
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && composer2 u --prefer-dist --no-ansi --no-interaction --no-scripts"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && php bin/console doctrine:migrations:migrate --no-interaction"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && php bin/console cache:clear"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && npm install"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && npm run build"
  only:
    - dev

deploy:
  stage: deploy
  script:
    - apt-get update -yqq
    - apt-get install -yqq openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p $SSH_PORT -H $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST pwd
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && composer2 u --prefer-dist --no-ansi --no-interaction --no-scripts"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && php bin/console doctrine:migrations:migrate --no-interaction"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && php bin/console cache:clear"
  only:
    - main

#cache:
#  paths:
#    - vendor/
#    - node_modules/
#
##before_script:
##  - apt-get update -yqq
##  - apt-get install git unzip -yqq
##  - curl -sS https://getcomposer.org/installer | php
##  - php composer.phar install --prefer-dist --no-ansi --no-interaction --no-scripts
##  - apt-get install -yqq libpq-dev
##  - docker-php-ext-install pdo pdo_pgsql
##  # install psql
##  - apt-get install -yqq postgresql-client
##  - apt-get install -y nodejs npm
#
#stages:
#  - deploy_dev
#  - deploy
#
#deploy_dev:
#  stage: deploy_dev
#  script:
#    - apt-get update -yqq
#    - apt-get install -yqq openssh-client
#    - apt-get update && apt-get install -y libssl-dev
#    - mkdir -p ~/.ssh
#    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
#    - chmod 600 ~/.ssh/id_rsa
#    - eval "$(ssh-agent -s)"
#    - ssh-add ~/.ssh/id_rsa
#    - ssh-keyscan -p $SSH_PORT -H $SSH_HOST >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST pwd
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && composer2 u --prefer-dist --no-ansi --no-interaction --no-scripts"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && php bin/console doctrine:migrations:migrate --no-interaction"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && php bin/console cache:clear"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && php bin/phpunit"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && npm install"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/dev-hairstar && npm run build"
#  only:
#    - dev
#
#deploy:
#  stage: deploy
#  script:
#    - apt-get update -yqq
#    - apt-get install -yqq openssh-client
#    - mkdir -p ~/.ssh
#    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
#    - chmod 600 ~/.ssh/id_rsa
#    - eval "$(ssh-agent -s)"
#    - ssh-add ~/.ssh/id_rsa
#    - ssh-keyscan -p $SSH_PORT -H $SSH_HOST >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST pwd
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && composer2 u --prefer-dist --no-ansi --no-interaction --no-scripts"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && php bin/console doctrine:migrations:migrate --no-interaction"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && php bin/console cache:clear"
#    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/public_html/hairstar && php bin/phpunit"
#  only:
#    - main
