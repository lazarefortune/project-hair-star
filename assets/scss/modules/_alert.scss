:root {
  --card-bg: #fff;
  --background-light: #fff;
  --border: #e6e6e6;
  --shadow: rgba(0, 0, 0, 0.1);
  --color: #000;
}

@function space($factor) {
  // DÃ©finissez la valeur de base pour space(1)
  $base-value: 4px;

  // Calculez la valeur d'espacement
  @return $base-value * $factor;
}

// Alerts
// ==================
.alert {
  background: var(--card-bg, var(--background-light));
  border: 1px solid var(--border);
  box-shadow: 0 2px 4px var(--shadow);
  border-radius: 3px;
  transition: 0.3s;
  margin: space(3) auto;
  padding: space(2);
  width: 100%;
  display: flex;
  align-items: center;
  animation: alertIn 0.5s both;
  line-height: 1.2;
  position: relative;
  border-bottom: 3px solid var(--border);
  color: var(--color);

  a {
    text-decoration: underline;
  }

  a:hover {
    text-decoration: none;
  }
}

.alert strong {
  font-weight: bold;
}

.alert.out {
  animation: alertOut 0.5s both;
}

.alert > svg:first-child {
  flex: none;
  width: 30px;
  height: 30px;
  margin-right: space(2);
}

.alert .alert-close {
  width: 30px;
  flex: none;
  margin-left: auto;
  margin-right: 0;
  color: var(--color);
  opacity: 0.3;
  cursor: pointer;
  transition: opacity 0.3s;

  &:hover {
    opacity: 0.5;
  }
}

.alert-close svg {
  width: 12px;
  height: 12px;
  color: var(--color) !important;
}

.alert-danger {
  border-bottom-color: var(--red);

  svg:first-child {
    color: var(--red);
  }
}

.alert-success {
  border-bottom-color: var(--green);

  svg:first-child {
    color: var(--green);
  }
}

.alert-info {
  border-bottom-color: var(--contrast);

  svg:first-child {
    color: var(--contrast);
  }
}

.alert-warning {
  border-bottom-color: var(--yellow);

  svg:first-child {
    color: var(--yellow);
  }
}

.alert__progress {
  height: 3px;
  background: var(--background-light);
  position: absolute;
  bottom: -3px;
  right: 0;
  width: 100%;
  z-index: 3;
  transform-origin: 0 100%;
  animation: alertDuration 2s linear both;
}

@keyframes alertIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}

@keyframes alertOut {
  from {
    opacity: 1;
    transform: translateY(0px);
  }
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

@keyframes alertDuration {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

.alert,
.is-floating .alert,
.alert.is-floating {
  box-shadow: 0 2px 20px var(--shadow);
  position: fixed;
  top: 20px;
  right: 20px;
  max-width: 400px;
  z-index: 3000;
}

.alert {
  border-top: var(--border) solid 1px;
  border-right: var(--border) solid 1px;
  border-left: var(--border) solid 1px;
}

//

.notification {
  @apply relative rounded-md border-2 border-gray-300 px-4 py-3 text-left text-base text-gray-600;
  & .notification-heading {
    @apply font-bold;
  }

  & .notification-content {
    @apply text-sm;
  }

  & .notification-text {
    @apply text-base;
  }
}

.notification-success {
  @apply border-b-green-500 bg-white;
  & > i {
    @apply text-slate-900;
  }

  & .notification-heading {
    @apply text-green-900;
  }

  & .notification-content, & .notification-text {
    @apply text-green-800;
  }
}

.notification-danger {
  @apply border-rose-800 bg-rose-50 text-rose-800;
}

.notification-warning {
  @apply border-yellow-500 bg-yellow-50;
  & > i {
    @apply text-yellow-500;
  }

  & .notification-heading {
    @apply text-yellow-900;
  }

  & .notification-content, & .notification-text {
    @apply text-yellow-800;
  }
}

.notification-info {
  @apply bg-white shadow-custom p-3 text-slate-900 border-l-[3px] border-primary-900;
  & .alert-heading, h1, h2, h3, h4, h5, h6 {
    @apply text-primary-900 font-bold text-xl mb-2;
  }
}

.notification-primary {
  @apply border-primary-500 bg-primary-50;
  & > i {
    @apply text-primary-500;
  }

  & .notification-heading {
    @apply text-primary-900;
  }

  & .notification-content, & .notification-text {
    @apply text-primary-800;
  }
}