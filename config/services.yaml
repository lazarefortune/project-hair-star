# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  admin_prefix: '%env(resolve:ADMIN_PREFIX)%'
  admin_email: '%env(ADMIN_EMAIL)%'
  sender_email: '%env(SENDER_EMAIL)%'
  contact_email: '%env(CONTACT_EMAIL)%'
  app.name: '%env(APP_NAME)%'
  timezone: 'Europe/Paris'
  realisation_img_dir: '%kernel.project_dir%/public/uploads/images/realisations'
  upload_images_directory: '%kernel.project_dir%/public/uploads/images'
  avatar_images: '/uploads/avatars'

  stripe_webhook_secret: '%env(STRIPE_WEBHOOK_SECRET)%'
  stripe_public_key: '%env(STRIPE_PUBLISHABLE_KEY)%'
  stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      exclude: '../src/{DependencyInjection,Entity,Infrastructure/Migrations,Tests,Kernel.php}'

  App\Http\Controller\:
    resource: '../src/Http/Controller'
    tags: [ 'controller.service_arguments' ]

  App\Http\Admin\Controller\:
    resource: '../src/Http/Admin/Controller'
    tags: [ 'controller.service_arguments' ]

  App\Http\Api\Controller\:
    resource: '../src/Http/Api/Controller'
    tags: [ 'controller.service_arguments' ]

  App\Helper\Paginator\PaginatorInterface:
    class: App\Helper\Paginator\KnpPaginator

  App\Helper\MinutesToTimeHelper: ~

  App\Infrastructure\Mailing\MailService:
    arguments:
      $senderEmail: '%sender_email%'
      $senderName: '%app.name%'

  App\Domain\Contact\ContactService:
    arguments:
      $contactEmail: '%contact_email%'

  App\Domain\Prestation\Form\PrestationForm:
    arguments:
      $minutesToTimeHelper: '@App\Helper\MinutesToTimeHelper'

  App\Http\Type\PriceType:
    arguments: [ '@App\Helper\CentToEuroTransformer' ]
    tags: [ 'form.type' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Infrastructure\AppConfigService:
    arguments:
      $appName: '%app.name%'
      $adminEmail: '%admin_email%'

  App\Domain\Application\EventListener\ExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  App\Infrastructure\Payment\Stripe\StripeApi:
    arguments: [ '%stripe_secret_key%' ]

  App\Infrastructure\Payment\Stripe\StripeEventValueResolver:
    arguments: [ '%stripe_webhook_secret%' ]
    tags:
      - { name: controller.argument_value_resolver, priority: 50 }

  App\Domain\Payment\PaymentService:
    arguments:
      $processors: [ '@App\Infrastructure\Payment\Stripe\StripePaymentProcessor', '@App\Infrastructure\Payment\Cash\CashPaymentProcessor' ]

# TODO: Si besoin d'utiliser le nom de l'application en BDD dans les templates, d√©commenter les lignes ci-dessous
#  App\Domain\Application\EventListener\ConfigListener:
#    tags:
#      - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest' }
